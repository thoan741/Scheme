#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.0 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 62 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 1
#"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1           0 970 0 28 3 12 #"#lang racket"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lib"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"trace.ss\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"Laboration 2\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Uppgift 1\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";\303\266vers\303\244tt f\303\266ljande uttryck till scheme och eval"
 #"uera dem, skriv upp svar:"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"a)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";1.2*(2-1/3)+(-8.7)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #"))) "
0 0 21 3 4 #"-8.7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";svar blir -6.699999999999999"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"b)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";(2/3 + 4/9) / (5/11 - 4/3)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";svar blir "
0 8          10 17 8 #"-110/87\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";1 + 1/(2 + 1/(1+1/2))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 8          10 17 5 #"11/8\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"d)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";1 * (-2) * 3 * (-4) * 5 * (-6) * 7"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"-6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";-5040"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Uppgift 2\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";Redog\303\266r f\303\266r vad som h\303"
 #"\244nder d\303\245 f\303\266ljande uttryck evalueras i given ordning"
 #":"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #") "
0 0 17 3 17 #"; ger x v\303\244rdet 7"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 17 3 17 #"; ger y v\303\244rdet 9"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 2 #") "
0 0 17 3 18 #"; ger z v\303\244rdet 11"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #")  "
0 0 17 3 42
(
 #"; villkor, j\303\244mf\303\266r o"
 #"m x \303\244r st\303\266rre \303\244n y"
) 0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 1 #"x"
0 0 24 3 8 #"        "
0 0 17 3 39 #"; om p\303\245st\303\245endet \303\244r sant, returnera x"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 1 #"y"
0 0 24 3 8 #")       "
0 0 17 3 41
#"; om p\303\245st\303\245endet \303\244r falskt, returnera y"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";i detta fall returneras v\303\244rdet av y=9"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 14 3 1 #"z"
0 0 24 3 2 #") "
0 0 14 3 1 #"z"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 99
(
 #";Den f\303\266rsta if satsen return"
 #"erar det tal av x och y som \303\244r st\303\266rst, och j\303\244mf"
 #"\303\266r det med talet z."
) 0 0 24 29 1 #"\n"
0 0 17 3 91
(
 #";Om talet z \303\244r st\303\266rre returneras z, annars returneras "
 #"det tal av x och y som \303\244r st\303\266rst."
) 0 0 24 29 1 #"\n"
0 0 17 3 67
(
 #";Detta kommer inneb\303\244ra att det st\303\266rsta talet av x,y,z "
 #"returneras."
) 0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";Vilket inneb\303\244r att v\303\244rdet p\303\245 z, 11, returneras"
 #" d\303\245 det \303\244r st\303\266rst."
) 0 0 24 29 1 #"\n"
0 0 17 3 112
(
 #";Om vi skriver (define x 12) "
 #"och k\303\266r cond-satsen igen, d\303\245 kommer x returneras d\303"
 #"\245 x blir dewt st\303\266rsta v\303\244rdet"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Uppgift 3)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49
#";f\303\266rklara med ord vad f\303\266ljande uttryck betyder:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 11 #")          "
0 0 17 3 41 #";anonym funktion som h\303\244mtar in 2 v\303\244rden"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"a2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 4 #"))  "
0 0 17 3 52
#";lokal funktion a2 som kvadrerar det f\303\266rsta v\303\244rdet"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"b2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 4 #"))  "
0 0 17 3 50 #";lokal funktion b2 som kvadrerar den andra v\303\244rdet"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"a2"
0 0 24 3 1 #" "
0 0 14 3 2 #"b2"
0 0 24 3 13 #"))           "
0 0 17 3 29 #";adderar dessa tv\303\245 kvadrater"
0 0 24 29 1 #"\n"
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 21 #")                    "
0 0 17 3 63
(
 #";k\303\266r funktionen med variablerna 3 och 4, returnerar 3^2+4^2=2"
 #"5"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"my-function"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"a2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"b2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"a2"
0 0 24 3 1 #" "
0 0 14 3 2 #"b2"
0 0 24 3 12 #")))         "
0 0 17 3 155
(
 #";g\303\266r samma sak som funktionen ovan, men kan anropas utifr\303"
 #"\245n och \303\244ven \303\244ven anv\303\244n"
 #"das med godtyckliga v\303\244rden p\303\245 a och b, och inte bara f"
 #"\303\266rdefinierade."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"ln2-a"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 28 #"                            "
0 0 17 3 22 #";funktionen som loopas"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 21 3 1 #"0"
0 0 24 3 31 #"                               "
0 0 17 3 157
(
 #";skriver ut resultatet om villkoret n=1 st\303\244mmer. Adderar ihop"
 #" eventuella termer av 1 om lo"
 #"open p\303\245 raden nedan har "
 #"beh\303\266vt k\303\266ras f\303\266r att uppn\303\245 villkoret."
) 0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 8 #"quotient"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 8 #"))))))  "
0 0 17 3 110
(
 #";adderar 1 till resultatet och k\303\266r loopen igen med nytt v\303"
 #"\244rde p\303\245 n/2 avrundat ned"
 #"\303\245t till n\303\244rmaste heltal."
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"trace"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 33 #")))                              "
0 0 17 3 33 #";startv\303\244rde f\303\266r loopfunktionen."
0 0 24 29 1 #"\n"
0 0 17 3 19 #";icke-svansrekursiv"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"ln2-b"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 28 #")                           "
0 0 17 3 23 #";funktionen som loopar."
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 6 #"result"
0 0 24 3 33 #"                                 "
0 0 17 3 63
(
 #";v\303\244rdet av result som skrivs ut n\303\244r villkoret \303\266"
 #"ver uppfylls."
) 0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 8 #"quotient"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 7 #")))))  "
0 0 17 3 131
(
 #";delar n med 2 och avrundar ned\303\245t till heltal, l\303\244gger "
 #"till 1 till svarsdelen och k\303\266r funktionen loop igen med dessa"
 #" nya v\303\244rden."
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"trace"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 38 #")))                                   "
0 0 17 3 33 #";startv\303\244rde f\303\266r loopfunktionen."
0 0 24 29 1 #"\n"
0 0 17 3 14 #";svansrekursiv"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Uppgift 4)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";alla steg i funktionen skrivs ut, s\303\245 eventuella fel kan hitt"
 #"as enklare."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Uppgift 5)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";ln2-b \303\244r svansrekursiv."
0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #";den sparar ner svaret inuti funktionen och s\303\245fort villkoret "
 #"uppfylls sker utskrift."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";ln2-a \303\244r inte svansrekusiv."
0 0 24 29 1 #"\n"
0 0 17 3 118
(
 #";v\303\244rden sparas ned separat"
 #" utanf\303\266r funktionen och r\303\244knas ihop efter det att vill"
 #"koret uppfylls och skrivs sedan ut."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Uppgift 6)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 5 #";cube"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 10 #")         "
0 0 17 3 36 #";funktion som kvadrerar en variabel."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cube"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 12 #")           "
0 0 17 3 52
#";funktion som r\303\244knar ut en variabels tredje potens."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"cube-iter"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 11 #")          "
0 0 17 3 166
(
 #";f\303\266rs\303\266ker r\303\244kna ut ett"
 #" n\303\244rmev\303\244rde av tredjeroten till ett tal, med f\303\266"
 #"rsta variabel v\303\245r gissning och andra variabel det tal vi vill"
 #" ta reda p\303\245 tredje roten ut."
) 0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 12 #"good-enough?"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 5 #"guess"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"cube-iter"
0 0 24 3 2 #" ("
0 0 14 3 7 #"improve"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 1 #"x"
0 0 24 3 27 #")))                        "
0 0 17 3 138
(
 #";funktion som best\303\244mmer om v\303\245r gissning \303\244r till"
 #"r\303\244ckligt bra och vi ska skriva ut, eller om vi m\303\245ste f"
 #"\303\266rb\303\244ttra resultatet           "
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"good-enough?"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cube"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 21 3 5 #"0.001"
0 0 24 3 5 #"))   "
0 0 17 3 103
(
 #";j\303\244mf\303\266r v\303\245r gissning u"
 #"pph\303\266jt till 3 och j\303\244mf\303\266r det med talet vi vill "
 #"ta reda p\303\245 tredje roten av."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"improve"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 7 #"average"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 7 #"))))   "
0 0 17 3 115
(
 #";funktion som f\303\266rb\303\244ttrar v\303\245r gissning om good-e"
 #"nough? funktionen s\303\244ger a"
 #"tt svaret inte \303\244r tillr\303\244ckligt n\303\244ra."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"average"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 36 #"))                                  "
0 0 17 3 40
#";ber\303\244knar medelv\303\244rdet mellan tv\303\245 tal."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";square"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"sqrt-iter"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 13 #"good-enough??"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 5 #"guess"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"sqrt-iter"
0 0 24 3 2 #" ("
0 0 14 3 8 #"improve2"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"good-enough??"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 21 3 5 #"0.001"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"improve2"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 8 #"average2"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 5 #"guess"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"average2"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 124
(
 #";Vad h\303\244nder om vi definierar b\303\245de sqrt och cuberoot sa"
 #"mtidigt utan att anv\303\244nda blockstruktur (prova, fundera, f\303"
 #"\266rklara)?"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 66
(
 #";Vi f\303\245r flera funktioner som delar namn, vilket blir ett prob"
 #"lem."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";Hur kan man l\303\266sa ovanst\303\245ende problem utan att anv\303"
 #"\244nda sig av blockstruktur?"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 117
(
 #";genom att byta namn p\303\245 de "
 #"funktioner som delar namn s\303\245 att inget namn definieras som en"
 #" funktion mer \303\244n en g\303\245ng."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";blockstruktur"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 5 #";cube"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 27 #"(define (cube-iter guess x)"
0 0 17 29 1 #"\n"
0 0 17 3 33 #"   (define (good-enough? guess x)"
0 0 17 29 1 #"\n"
0 0 17 3 41 #"      (< (abs (- (cube guess) x)) 0.001))"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"   (define (improve guess x)"
0 0 17 29 1 #"\n"
0 0 17 3 49 #"      (average (* 2 guess) (/ x (square guess))))"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"   (define (average x y)"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"   (/  (+ x y) 3))"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"   (if (good-e"
0 0 17 3 15 #"nough? guess x)"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"      guess"
0 0 17 29 1 #"\n"
0 0 17 3 34 #"      (cube-iter (improve guess x)"
0 0 17 29 1 #"\n"
0 0 17 3 13 #"         x)))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 7 #";square"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 27 #"(define (sqrt-iter guess x)"
0 0 17 29 1 #"\n"
0 0 17 3 33 #"   (define (good-enough? guess x)"
0 0 17 29 1 #"\n"
0 0 17 3 43 #"      (< (abs (- (square guess) x)) 0.001))"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"   (define (improve guess x)"
0 0 17 29 1 #"\n"
0 0 17 3 34 #"      (average guess (/ x guess)))"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"   (define (average x y)"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"   (/  (+ x y) 2))"
0 0 17 29 1 #"\n"
0 0 17 3 29 #"   (if (good-enough? guess x)"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"      guess"
0 0 17 29 1 #"\n"
0 0 17 3 34 #"      (sqrt-iter (improve guess x)"
0 0 17 29 1 #"\n"
0 0 17 3 13 #"         x)))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0           0
